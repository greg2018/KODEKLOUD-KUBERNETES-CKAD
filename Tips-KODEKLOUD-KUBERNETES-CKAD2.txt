kubectl edit deployment frontend set image=kodekloud/webapp-color:v2

#Job and cron job
kubectl create -f throw-dice-pod.yaml

kubectl logs throw-dice-pod

kubectl create job throw-dice-job --image kodekloud/throw-dice --dry-run=client -o yaml > job.yaml

kubectl create -f  /var/answers/throw-dice-job-3-completions.yaml

kubectl explain job --recursive




kubctl create cronjob throw-dice-cron-job --image kodekloud/throw-dice --schedule "30 21 * * *" --dry-run=client -o yaml > cronjob.yaml

#Network and Service Practice Test

 kubectl describe deployment simple-webapp-deployment
 
 kubectl expose deployment simple-webapp-deployment --name=webapp-service --target-port=8080 --type=NodePort --port=8080 --dry-run=client -o yaml > svc.yaml
 
 apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  name: webapp-service
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
    nodePort: 30080
  selector:
    name: simple-webapp
  type: NodePort
status:
  loadBalancer: {}
  
  
#Ingress Networking

kubectl get all --all-namespaces

kubectl get deploy --namespace app-space

kubectl get ingress --all-namespaces

kubectl describe ingresses ingress-wear-watch --namespace=app-space

kubectl describe ingress --namespace app-space



kubectl describe networking.k8s.io/v1 Ingress --namespace app-space


kubectl edit ingress --namespace app-space



##Ingress Networking -2 

kubectl get deployments.apps--all-namespaces



kubectl create namespace ingress-space

kubectl create ns ingress-space



kubectl create configmap nginx-configuration --namespace ingress-space

kubectl create cm nginx-configuration --namespace ingress-space


kubectl create serviceaccount ingress-serviceaccount --namespace ingress-space

kubectl create ns ingress-serviceaccount --namespace ingress-space


kubectl -n ingress-space get rolebingings.rbac.authorization.k8s.io

kubectl get roles,rolebindings --namespace ingress-space



 kubectl create -f  /var/answers/ingress-controller-answer-file.yaml
 
 kubectl create -f /var/answers/ingress-service.yaml
 
 kubectl create -f  /var/answers/ingress-resource.yaml
 
 
 #Network Policy
 
 kubectl get networkpolicy
 
 kubectl get netpol
 
 kubectl get pods -l name=payroll
 
 kubectl describe netpol payroll-policy
 
 
 kubectl get pods -l name=internal
 
 
 ###### State Persistence
 Persistent Volumes
 
 kubectl exec webapp -- cat /log/app.log
 
  /var/answers/webapp-pod-hostpath.yaml
  
kubectl get pvc
  
kubectl get pv

 /var/answers/claim-log-1-new.yaml
 
 kubectl delete pvc claim-log-1
 
 
 ###### Storage class
 
 kubectl get sc
 
 kubectl create -f /var/answers/pvc.yaml
 
 kubectl describe pvc local-pvc




 
 
 
 
 
 
 
 
 
 
 









