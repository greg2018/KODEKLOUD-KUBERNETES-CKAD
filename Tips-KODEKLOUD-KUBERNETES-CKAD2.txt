kubectl edit deployment frontend set image=kodekloud/webapp-color:v2

#Job and cron job
kubectl create -f throw-dice-pod.yaml

kubectl logs throw-dice-pod

kubectl create job throw-dice-job --image kodekloud/throw-dice --dry-run=client -o yaml > job.yaml

kubectl create -f  /var/answers/throw-dice-job-3-completions.yaml

kubectl explain job --recursive




kubctl create cronjob throw-dice-cron-job --image kodekloud/throw-dice --schedule "30 21 * * *" --dry-run=client -o yaml > cronjob.yaml

#Network and Service Practice Test

 kubectl describe deployment simple-webapp-deployment
 
 kubectl expose deployment simple-webapp-deployment --name=webapp-service --target-port=8080 --type=NodePort --port=8080 --dry-run=client -o yaml > svc.yaml
 
 apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  name: webapp-service
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
    nodePort: 30080
  selector:
    name: simple-webapp
  type: NodePort
status:
  loadBalancer: {}
  
  
#Ingress Networking

kubectl get all --all-namespaces

kubectl get deploy --namespace app-space

kubectl get ingress --all-namespaces

kubectl describe ingresses ingress-wear-watch --namespace=app-space

kubectl describe ingress --namespace app-space



kubectl describe networking.k8s.io/v1 Ingress --namespace app-space


kubectl edit ingress --namespace app-space







